$(document).ready(() => {
  $("#add_ingredient").click(() => {
    let ing = 100; //100 set to ensure no clash with wtform id's
    let newLi = $('<li class="list-group-item form-group">');
    // creates a new input with id and name to allow wtforms to
    // recognise the input for correct posting to db.
    // autocomplete=off and type=search stop browser from messing with form style
    newLi
      .after()
      .html(
        '<label for="ingredients-' +
          ing +
          '"></label>' +
          '<span class="bmd-group-item is-filled"><input class="form-control form-control-sm" type="search" autocomplete="off" name="ingredients-' +
          ing +
          '" id="ingredients-' +
          ing +
          '" value="" ></span>'
      );
    newLi.appendTo("#ingredients");

    ing++;
  });

  // delegates the event handler to #ingredients, allowing dynamically
  // generated ingredient inputs to register events.
  // checks length of input, removing the grandparent 'li' element if empty.
  $("#ingredients").on("keyup", "li", e => {
    if ($(e.target).val().length == 0) {
      $(e.target)
        .parent()
        .parent()
        .remove();
    }
  });

  //give classes to elements generated by wtforms.
  $("#ingredients")
    .children()
    .addClass("list-group-item form-group");
  //attr stops browser autocomplete which messes up the form styling
  $("li.list-group-item")
    .find("input")
    .addClass("form-control form-control-sm")
    .attr("autocomplete", "off")
    .attr("type", "search");

  //https://stackoverflow.com/questions/895171/prevent-users-from-submitting-a-form-by-hitting-enter
  //stops user from submitting form by pressing enter, unless
  //in a text area or on a button.
  $(document).on("keydown", ":input:not(textarea):not(:submit)", e => {
    if (e.key == "Enter") {
      e.preventDefault();
    }
  });
});
